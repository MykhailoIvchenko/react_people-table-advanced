{"version":3,"sources":["components/HomePage/HomePage.tsx","api.ts","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/NewPerson/NewPerson.tsx","components/AddPerson/AddPerson.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["HomePage","className","request","url","a","fetch","response","ok","Error","status","statusText","json","getPeople","result","PersonName","props","location","useLocation","searchParams","URLSearchParams","search","set","person","slug","linkStylesClass","classNames","PersonLink","PersonLinkMale","sex","PersonLinkFemale","to","toString","children","PersonRow","index","getPersonParentInfo","parentName","parentType","mother","born","died","father","rowStylesClass","Person","Selected","name","motherName","fatherName","PeopleTable","people","personSlug","get","useState","sortParameter","setSortParameter","sortingType","setSortingType","navigate","useNavigate","useEffect","map","header","appliedHeader","toLowerCase","onClick","handleHeaderClick","alt","ArrowsUpAndDown","Hidden","src","ArrowUp","ArrowDown","sort","person1","person2","localeCompare","sortPeopleAsc","sortPeopleDsc","NewPerson","addPersonToTheList","date","Date","setName","setSex","setBorn","getFullYear","setDied","setMotherName","setFatherName","isHintVisible","setIsHintVisible","bornHintText","setBornHintText","diedHintText","setDiedHintText","finalAgeHintText","setFinalAgeHintText","correctedName","hintMessageStylesClass","ErrorHint","addNewPerson","event","preventDefault","isErrorOccured","validateBornAndDied","namePartsFromSmallLetter","updatedName","trim","toUpperCase","slice","spaceIndex","indexOf","nextSpaceIndex","helpWord","includes","updateName","newPerson","split","join","onSubmit","value","type","onChange","target","length","prevName","saveName","required","checked","min","max","disabled","defaultValue","filter","woman","apprWoman","man","apprMan","AddPerson","PeoplePage","setPeople","appliedQuery","query","setQuery","currentSortBy","currentSlug","peopleWithParents","arr","find","currentPerson","applyQuery","useCallback","debounce","newQuery","sortBy","delete","then","pathname","path","element","NotFoundPage","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73deedde.chunk.js","sourcesContent":["import React from 'react';\nimport './HomePage.scss';\n\nconst HomePage: React.FC = () => (\n  <h2 className=\"HomePageTitle\">\n    Home Page\n  </h2>\n);\n\nexport default HomePage;\n","export const BASE_URL = 'https://mate-academy.github.io/react_people-table/api';\n\nexport const request = async (url: string) => {\n  const response = await fetch(`${BASE_URL}${url}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n};\n\nexport const getPeople = async () => {\n  const result = await request('/people.json');\n\n  return result;\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport './PersonName.scss';\n\ntype Props = {\n  person: Person,\n};\n\nconst PersonName: React.FC<Props> = (props) => {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  searchParams.set('slug', props.person.slug);\n\n  const linkStylesClass = classNames({\n    PersonLink: true,\n    PersonLinkMale: props.person.sex === 'm',\n    PersonLinkFemale: props.person.sex === 'f',\n  });\n\n  return (\n    <NavLink\n      className={linkStylesClass}\n      to={`?${searchParams.toString()}`}\n    >\n      {props.children}\n    </NavLink>\n  );\n};\n\nexport default PersonName;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PersonName from '../PersonName/PersonName';\nimport './PersonRow.scss';\n\ntype Props = {\n  person: Person,\n  slug: string,\n  index: number,\n};\n\nconst PersonRow: React.FC<Props> = ({ person, slug, index }) => {\n  const getPersonParentInfo\n    = (parentName: string, parentType: 'mother' | 'father') => {\n      if (!parentName) {\n        return 'Information is absent';\n      }\n\n      switch (parentType) {\n        case 'mother':\n          if (!person.mother) {\n            return `${parentName} (Detailed info is absent)`;\n          }\n\n          return (\n            <PersonName person={person.mother}>\n              {`${parentName} | ${person.mother.born} - ${person.mother.died}`}\n            </PersonName>\n          );\n        default:\n          if (!person.father) {\n            return `${parentName} (Detailed info is absent)`;\n          }\n\n          return (\n            <PersonName person={person.father}>\n              {`${parentName} | ${person.father.born} - ${person.father.died}`}\n            </PersonName>\n          );\n      }\n    };\n\n  const rowStylesClass = classNames({\n    Person: true,\n    Selected: person.slug === slug,\n  });\n\n  return (\n    <>\n      <tr\n        className={rowStylesClass}\n      >\n        <td>\n          <PersonName person={person}>\n            {`${index + 1}. ${person.name}`}\n          </PersonName>\n        </td>\n        <td>\n          {\n            person.sex === 'm'\n              ? 'male'\n              : 'female'\n          }\n        </td>\n        <td>\n          {person.born}\n        </td>\n        <td>\n          {person.died}\n        </td>\n        <td className=\"ParentName\">\n          {getPersonParentInfo(person.motherName, 'mother')}\n        </td>\n        <td className=\"ParentName\">\n          {getPersonParentInfo(person.fatherName, 'father')}\n        </td>\n      </tr>\n    </>\n  );\n};\n\nexport default PersonRow;\n","import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport classNames from 'classnames';\nimport PersonRow from '../PersonRow/PersonRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[],\n};\n\nconst PeopleTable: React.FC<Props> = ({ people }) => {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const personSlug = searchParams.get('slug') || '';\n  const headers = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n  const [\n    sortParameter,\n    setSortParameter,\n  ] = useState(searchParams.get('sortBy'));\n  const [sortingType, setSortingType] = useState('asc');\n  const navigate = useNavigate();\n\n  const sortPeopleAsc = () => {\n    switch (sortParameter) {\n      case 'name':\n        return [...people].sort((person1, person2) => person1.name\n          .localeCompare(person2.name));\n      case 'sex':\n        return [...people].sort((person1, person2) => person1.sex\n          .localeCompare(person2.sex));\n      case 'born':\n        return [...people]\n          .sort((person1, person2) => person1.born - person2.born);\n      case 'died':\n        return [...people]\n          .sort((person1, person2) => person1.died - person2.died);\n      default:\n        return people;\n    }\n  };\n\n  const sortPeopleDsc = () => {\n    switch (sortParameter) {\n      case 'name':\n        return [...people].sort((person1, person2) => person2.name\n          .localeCompare(person1.name));\n      case 'sex':\n        return [...people].sort((person1, person2) => person2.sex\n          .localeCompare(person1.sex));\n      case 'born':\n        return [...people]\n          .sort((person1, person2) => person2.born - person1.born);\n      case 'died':\n        return [...people]\n          .sort((person1, person2) => person2.died - person1.died);\n      default:\n        return people;\n    }\n  };\n\n  const getSortedPeople = () => {\n    if (sortingType === 'asc') {\n      return sortPeopleAsc();\n    }\n\n    return sortPeopleDsc();\n  };\n\n  const handleHeaderClick = (header: string) => {\n    if ((header === 'father') || (header === 'mother')) {\n      return;\n    }\n\n    if (sortParameter !== header) {\n      setSortingType('asc');\n    } else if (sortingType === 'asc') {\n      setSortingType('dsc');\n    } else {\n      setSortingType('asc');\n    }\n\n    setSortParameter(header);\n\n    searchParams.set('sortBy', header);\n\n    navigate(`?${searchParams.toString()}`);\n  };\n\n  useEffect(() => {\n    setSortParameter(searchParams.get('sortBy'));\n  }, []);\n\n  return (\n    <table className=\"PeopleTable\">\n      <thead>\n        <tr>\n          {headers.map(header => {\n            const appliedHeader = header.toLowerCase();\n\n            return (\n              <th\n                className=\"HeaderCell\"\n                key={header}\n                onClick={() => handleHeaderClick(appliedHeader)}\n              >\n                {searchParams.get('sortBy') === appliedHeader\n                  ? `${header}*`\n                  : header}\n\n                {\n                  (header !== 'Mother' && header !== 'Father') && (\n                    <span className=\"ImageContainer\">\n                      <img\n                        alt=\"Arrows up and down\"\n                        className={\n                          classNames({\n                            ArrowsUpAndDown: true,\n                            Hidden: appliedHeader\n                              === searchParams.get('sortBy'),\n                          })\n                        }\n                        src=\"/react_people-table-advanced/images/sort_both.png\"\n                      />\n                      <img\n                        alt=\"Arrow up\"\n                        className={\n                          classNames({\n                            ArrowUp: true,\n                            Hidden: !((sortingType === 'dsc') && (\n                              appliedHeader === searchParams.get('sortBy'))\n                            ),\n                          })\n                        }\n                        src=\"/react_people-table-advanced/images/sort_asc.png\"\n                      />\n                      <img\n                        alt=\"Arrow down\"\n                        className={\n                          classNames({\n                            ArrowDown: true,\n                            Hidden: !((sortingType === 'asc') && (\n                              appliedHeader === searchParams.get('sortBy'))\n                            ),\n                          })\n                        }\n                        src=\"/react_people-table-advanced/images/sort_desc.png\"\n                      />\n                    </span>\n                  )\n                }\n              </th>\n            );\n          })}\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          getSortedPeople().map((person, index) => (\n            <PersonRow\n              index={index}\n              person={person}\n              slug={personSlug}\n              key={person.slug}\n            />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n\nexport default PeopleTable;\n","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport classNames from 'classnames';\nimport './NewPerson.scss';\n\ntype NewPersonProps = {\n  people: Person[],\n  addPersonToTheList: (newPerson: Person) => void,\n};\n\nconst NewPerson: React.FC<NewPersonProps> = ({\n  people, addPersonToTheList,\n}) => {\n  const date = new Date();\n  const [name, setName] = useState('');\n  const [sex, setSex] = useState('m');\n  const [born, setBorn] = useState(0);\n  const [died, setDied] = useState(date.getFullYear());\n  const [motherName, setMotherName] = useState('');\n  const [fatherName, setFatherName] = useState('');\n  const [isHintVisible, setIsHintVisible] = useState(false);\n  const [bornHintText, setBornHintText] = useState('');\n  const [diedHintText, setDiedHintText] = useState('');\n  const [finalAgeHintText, setFinalAgeHintText] = useState('');\n  const navigate = useNavigate();\n  let correctedName = '';\n  const hintMessageStylesClass = classNames({\n    ErrorHint: isHintVisible,\n    Hidden: !isHintVisible,\n  });\n\n  const validateBornAndDied = () => {\n    let isErrorOccured = false;\n\n    if (born < 1400) {\n      setBornHintText(\n        'You entered invalid birth date. It should be 1400 or more.',\n      );\n      isErrorOccured = true;\n    }\n\n    if (died < 1400) {\n      setDiedHintText(\n        'You entered invalid death date. It should be 1400 or more.',\n      );\n      isErrorOccured = true;\n    }\n\n    if (died - born < 0) {\n      setFinalAgeHintText(\n        'Person cannot die before being born. Please, correct years.',\n      );\n      isErrorOccured = true;\n    }\n\n    if (died - born > 150) {\n      setFinalAgeHintText(\n        'Unfortunately, person cannot live so long. Please, correct years.',\n      );\n      isErrorOccured = true;\n    }\n\n    if (isErrorOccured) {\n      setIsHintVisible(true);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  const updateName = () => {\n    const namePartsFromSmallLetter = ['de', 'del', 'van', 'di'];\n\n    let updatedName = name.toLowerCase().trim();\n\n    if (name) {\n      updatedName = updatedName[0].toUpperCase() + updatedName.slice(1);\n    }\n\n    let spaceIndex = updatedName.indexOf(' ');\n    let nextSpaceIndex = updatedName.indexOf(' ', spaceIndex + 1);\n\n    if (spaceIndex < 0) {\n      correctedName = updatedName;\n\n      return;\n    }\n\n    correctedName = updatedName.slice(0, spaceIndex);\n\n    while (spaceIndex > 0) {\n      let helpWord = '';\n\n      if (nextSpaceIndex > 0) {\n        helpWord = updatedName.slice(spaceIndex + 1, nextSpaceIndex);\n      } else {\n        helpWord = updatedName.slice(spaceIndex + 1);\n      }\n\n      if (namePartsFromSmallLetter.includes(helpWord)) {\n        correctedName += ` ${helpWord}`;\n      } else {\n        correctedName\n        += ` ${helpWord[0].toUpperCase()}${helpWord.slice(1)}`;\n      }\n\n      spaceIndex = nextSpaceIndex;\n      nextSpaceIndex = updatedName.indexOf(' ', spaceIndex + 1);\n    }\n  };\n\n  const saveName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value.length < name.length) {\n      setName(event.target.value);\n\n      return;\n    }\n\n    const value = event.target.value.slice(-1);\n\n    const permittedSymbols\n      = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ ';\n\n    if (!permittedSymbols.includes(value)) {\n      return;\n    }\n\n    if (name.length === 0 && value === ' ') {\n      return;\n    }\n\n    if (name.slice(-1) === ' ' && value === ' ') {\n      return;\n    }\n\n    setName((prevName) => {\n      return prevName + value;\n    });\n  };\n\n  const addNewPerson = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const isError = validateBornAndDied();\n\n    if (isError) {\n      return;\n    }\n\n    updateName();\n\n    const newPerson = {\n      name: correctedName,\n      sex,\n      born,\n      died,\n      motherName,\n      fatherName,\n      slug: `${correctedName.toLowerCase().split(' ').join('-')}-${born}`,\n    };\n\n    navigate('/react_people-table-advanced/people');\n\n    addPersonToTheList(newPerson);\n  };\n\n  return (\n    <div className=\"AddingNewPerson\">\n      <form\n        className=\"NewPersonForm\"\n        onSubmit={(event) => {\n          addNewPerson(event);\n        }}\n      >\n        <label className=\"Name\">\n          Name\n          <input\n            className=\"Name__input\"\n            value={name}\n            type=\"text\"\n            onChange={(event) => saveName(event)}\n            required\n          />\n        </label>\n\n        <label className=\"Sex\">\n          Sex\n          <label\n            className=\"Sex__male\"\n          >\n            Male\n            <input\n              className=\"Sex__radio\"\n              name=\"sex\"\n              value=\"m\"\n              type=\"radio\"\n              onChange={(event) => setSex(event.target.value)}\n              required\n              checked={sex === 'm'}\n            />\n          </label>\n\n          <label\n            className=\"Sex__female\"\n          >\n            Female\n            <input\n              className=\"Sex__radio\"\n              name=\"sex\"\n              value=\"f\"\n              type=\"radio\"\n              onChange={(event) => setSex(event.target.value)}\n              required\n            />\n          </label>\n        </label>\n\n        <label className=\"Born\">\n          Born\n          <input\n            className=\"Born__input\"\n            value={born}\n            type=\"number\"\n            min=\"1400\"\n            max={date.getFullYear()}\n            onChange={(event) => {\n              setBorn(+event.target.value);\n              setMotherName('');\n              setFatherName('');\n            }}\n            required\n          />\n        </label>\n\n        <label\n          className=\"Died\"\n        >\n          Died\n          <input\n            className=\"Died__input\"\n            value={died}\n            type=\"number\"\n            min=\"1400\"\n            max={date.getFullYear()}\n            onChange={(event) => setDied(+event.target.value)}\n            disabled={born === 0}\n            required\n          />\n        </label>\n\n        <label className=\"Mother\">\n          Mother\n          <select\n            className=\"Mother__select\"\n            onChange={(event) => setMotherName(event.target.value)}\n            disabled={born === 0}\n            defaultValue=\"\"\n          >\n            <option\n              value=\"\"\n            >\n              Find persons mother\n            </option>\n            {\n              people.filter(person => person.sex === 'f')\n                .filter(woman => (woman.died >= born)\n                && (woman.born + 12 < born))\n                .map(apprWoman => (\n                  <option\n                    value={apprWoman.name}\n                    key={`${apprWoman.name}${apprWoman.born}${apprWoman.died}`}\n                  >\n                    {apprWoman.name}\n                  </option>\n                ))\n            }\n          </select>\n        </label>\n\n        <label className=\"Father\">\n          Father\n          <select\n            className=\"Father__select\"\n            onChange={(event) => setFatherName(event.target.value)}\n            disabled={born === 0}\n            defaultValue=\"\"\n          >\n            <option\n              value=\"\"\n            >\n              Find persons father\n            </option>\n            {\n              people.filter(person => person.sex === 'm')\n                .filter(man => (man.died >= born)\n                && (man.born + 12 < born))\n                .map(apprMan => (\n                  <option\n                    value={apprMan.name}\n                    key={`${apprMan.name}${apprMan.born}${apprMan.died}`}\n                  >\n                    {apprMan.name}\n                  </option>\n                ))\n            }\n          </select>\n        </label>\n\n        <button\n          className=\"AddPersonButton\"\n          type=\"submit\"\n        >\n          Add person\n        </button>\n      </form>\n\n      <div\n        className={hintMessageStylesClass}\n      >\n        <p>{bornHintText}</p>\n        <p>{diedHintText}</p>\n        <p>{finalAgeHintText}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default NewPerson;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AddPerson.scss';\n\nconst AddPerson: React.FC = () => {\n  const navigate = useNavigate();\n\n  const showAddNewPersonForm = () => {\n    navigate('/react_people-table-advanced/people/new');\n  };\n\n  return (\n    <button\n      className=\"AddPersonEntrance\"\n      type=\"button\"\n      onClick={showAddNewPersonForm}\n    >\n      Add new person\n    </button>\n  );\n};\n\nexport default AddPerson;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  Routes, Route, useLocation, useNavigate,\n} from 'react-router-dom';\nimport { debounce } from 'lodash';\nimport { getPeople } from '../../api';\nimport PeopleTable from '../PeopleTable/PeopleTable';\nimport './PeoplePage.scss';\nimport NewPerson from '../NewPerson/NewPerson';\nimport AddPerson from '../AddPerson/AddPerson';\n\nconst PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n  const currentSortBy = searchParams.get('sortBy') || '';\n  const currentSlug = searchParams.get('slug') || '';\n  const navigate = useNavigate();\n  const peopleWithParents = [...people];\n\n  const addPersonToThelist = (newPerson: Person) => {\n    setPeople([...people,\n      newPerson]);\n  };\n\n  people.map((person, index, arr) => {\n    peopleWithParents[index].father\n    = arr.find(currentPerson => {\n        return person.fatherName === currentPerson.name;\n      });\n\n    peopleWithParents[index].mother\n    = arr.find(currentPerson => person.motherName === currentPerson.name);\n\n    return '';\n  });\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string, sortBy: string, slug: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery.toLowerCase());\n      } else {\n        searchParams.delete('query');\n      }\n\n      if (sortBy) {\n        searchParams.set('sortBy', sortBy);\n      }\n\n      if (slug) {\n        searchParams.set('slug', slug);\n      }\n\n      navigate(`?${searchParams.toString()}`);\n    }, 500),\n    [],\n  );\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (value[value.length - 1] === ' ') {\n      return;\n    }\n\n    setQuery(value);\n\n    applyQuery(value, currentSortBy, currentSlug);\n  };\n\n  const getVisiblePeople = () => {\n    if (appliedQuery) {\n      const visiblePeople = peopleWithParents.filter(person => {\n        const valueForComparation\n        = person.name.split(' ').join('')\n        + (person.motherName ? (person.motherName.split(' ')).join('') : '')\n        + (person.fatherName ? (person.fatherName.split(' ')).join('') : '');\n\n        return valueForComparation.toLowerCase().includes(query);\n      });\n\n      return visiblePeople;\n    }\n\n    return people;\n  };\n\n  useEffect(() => {\n    setQuery(appliedQuery);\n  }, [appliedQuery]);\n\n  useEffect(() => {\n    getPeople().then(result => {\n      setPeople(result);\n    });\n  }, []);\n\n  return (\n    <div className=\"PeoplePage\">\n      <h2 className=\"PeoplePageTitle\">\n        People Page\n      </h2>\n\n      <div className=\"AddPersonEntranceContainer\">\n        {location.pathname === '/react_people-table-advanced/people'\n          && <AddPerson />}\n      </div>\n\n      <Routes>\n        <Route\n          path=\"/new\"\n          element={(\n            <NewPerson\n              people={people}\n              addPersonToTheList={addPersonToThelist}\n            />\n          )}\n        />\n      </Routes>\n\n      <h3\n        className=\"TableTitle\"\n      >\n        People table\n      </h3>\n\n      <label className=\"Search\">\n        Search\n        <input\n          value={query}\n          data-cy=\"filterInput\"\n          className=\"Search__input\"\n          onChange={handleInputChange}\n        />\n      </label>\n\n      <ul className=\"Persons\">\n        <PeopleTable\n          people={getVisiblePeople()}\n        />\n      </ul>\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\n\nconst NotFoundPage: React.FC = () => (\n  <h2 className=\"NotFoundPageTitle\">\n    Page is not found\n  </h2>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\n\nconst Header: React.FC = () => (\n  <>\n    <div className=\"LinksContainer\">\n      <NavLink\n        className=\"Link\"\n        to=\"/react_people-table-advanced/home\"\n      >\n        Home\n      </NavLink>\n      <NavLink\n        className=\"Link\"\n        to=\"/react_people-table-advanced/people\"\n      >\n        People\n      </NavLink>\n    </div>\n  </>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport HomePage from './components/HomePage/HomePage';\nimport PeoplePage from './components/PeoplePage/PeoplePage';\nimport NotFoundPage from './components/NotFoundPage/NotFoundPage';\nimport Header from './components/Header/Header';\nimport './App.scss';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <h1 className=\"App__title\">\n      People table application\n    </h1>\n    <Header />\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route\n        path=\"/react_people-table-advanced/people/*\"\n        element={<PeoplePage />}\n      />\n      <Route\n        path=\"/react_people-table-advanced/home\"\n        element={<Navigate to=\"/\" />}\n      />\n      <Route path=\"/*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}